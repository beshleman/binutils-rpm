diff --git a/ld/testsuite/ld-aarch64/aarch64-elf.exp b/ld/testsuite/ld-aarch64/aarch64-elf.exp
index d4f6235..15147e5 100644
--- a/ld/testsuite/ld-aarch64/aarch64-elf.exp
+++ b/ld/testsuite/ld-aarch64/aarch64-elf.exp
@@ -34,7 +34,7 @@ if { ![is_elf_format] || ![istarget "aarch64*-*-*"] } {
 
 set aarch64elftests {
     {"EH Frame merge" "-Ttext 0x8000" "" "" {eh-frame-bar.s eh-frame-foo.s}
-	{{objdump --dwarf=frames eh-frame.d}} "eh-frame"}
+	{{readelf -wf eh-frame.d}} "eh-frame"}
 }
 
 run_ld_link_tests $aarch64elftests
diff --git a/ld/testsuite/ld-aarch64/eh-frame-bar.s b/ld/testsuite/ld-aarch64/eh-frame-bar.s
index a67d8e4..ebc4feb 100644
--- a/ld/testsuite/ld-aarch64/eh-frame-bar.s
+++ b/ld/testsuite/ld-aarch64/eh-frame-bar.s
@@ -12,7 +12,7 @@ __longjmp:
  .cfi_offset x27, 24
  .cfi_offset x28, 32
  .cfi_offset x29, 32
- .cfi_offset x30, 36
+ .cfi_offset x30, 40
  .cfi_offset d9, 8
 # This eh frame data differs from eh-frame-bar.s here, see the comment
 # in eh-frame-foo.s
diff --git a/ld/testsuite/ld-aarch64/eh-frame-foo.s b/ld/testsuite/ld-aarch64/eh-frame-foo.s
index c077ef2..6a1e3b3 100644
--- a/ld/testsuite/ld-aarch64/eh-frame-foo.s
+++ b/ld/testsuite/ld-aarch64/eh-frame-foo.s
@@ -12,7 +12,7 @@ __longjmp:
  .cfi_offset x27, 24
  .cfi_offset x28, 32
  .cfi_offset x29, 32
- .cfi_offset x30, 36
+ .cfi_offset x30, 40
  .cfi_offset d9, 8
 
 /* This eh frame data differs from eh-frame-bar.s here.  The eh
diff --git a/ld/testsuite/ld-aarch64/eh-frame.d b/ld/testsuite/ld-aarch64/eh-frame.d
index 88e9988..6b93121 100644
--- a/ld/testsuite/ld-aarch64/eh-frame.d
+++ b/ld/testsuite/ld-aarch64/eh-frame.d
@@ -1,31 +1,29 @@
-.*:     file format elf64-(little|big)aarch64
+Contents of the \.eh_frame section:
 
-Contents of the .eh_frame section:
-
-00000000 00000044 00000000 CIE
+0+0000 0+0044 0+0000 CIE
   Version:               1
   Augmentation:          "zR"
-  Code alignment factor: 2
-  Data alignment factor: -4
+  Code alignment factor: .
+  Data alignment factor: -.
   Return address column: 30
   Augmentation data:     1b
 
-  DW_CFA_def_cfa: r31 ofs 0
-  DW_CFA_def_cfa: r0 ofs 0
-  DW_CFA_offset_extended_sf: r19 at cfa\+16
-  DW_CFA_offset_extended_sf: r20 at cfa\+16
-  DW_CFA_offset_extended_sf: r21 at cfa\+16
-  DW_CFA_offset_extended_sf: r22 at cfa\+16
-  DW_CFA_offset_extended_sf: r23 at cfa\+24
-  DW_CFA_offset_extended_sf: r24 at cfa\+24
-  DW_CFA_offset_extended_sf: r25 at cfa\+24
-  DW_CFA_offset_extended_sf: r26 at cfa\+24
-  DW_CFA_offset_extended_sf: r27 at cfa\+24
-  DW_CFA_offset_extended_sf: r28 at cfa\+32
-  DW_CFA_offset_extended_sf: r29 at cfa\+32
-  DW_CFA_offset_extended_sf: r30 at cfa\+36
-  DW_CFA_offset_extended_sf: r9 at cfa\+8
-  DW_CFA_offset_extended_sf: r11 at cfa\+8
+  DW_CFA_def_cfa: r31 \(sp\) ofs 0
+  DW_CFA_def_cfa: r0 \(x0\) ofs 0
+  DW_CFA_offset_extended_sf: r19 \(x19\) at cfa\+16
+  DW_CFA_offset_extended_sf: r20 \(x20\) at cfa\+16
+  DW_CFA_offset_extended_sf: r21 \(x21\) at cfa\+16
+  DW_CFA_offset_extended_sf: r22 \(x22\) at cfa\+16
+  DW_CFA_offset_extended_sf: r23 \(x23\) at cfa\+24
+  DW_CFA_offset_extended_sf: r24 \(x24\) at cfa\+24
+  DW_CFA_offset_extended_sf: r25 \(x25\) at cfa\+24
+  DW_CFA_offset_extended_sf: r26 \(x26\) at cfa\+24
+  DW_CFA_offset_extended_sf: r27 \(x27\) at cfa\+24
+  DW_CFA_offset_extended_sf: r28 \(x28\) at cfa\+32
+  DW_CFA_offset_extended_sf: r29 \(x29\) at cfa\+32
+  DW_CFA_offset_extended_sf: r30 \(x30\) at cfa\+40
+  DW_CFA_offset_extended_sf: r73 \(v9\) at cfa\+8
+  DW_CFA_offset_extended_sf: r75 \(v11\) at cfa\+8
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
@@ -34,7 +32,7 @@ Contents of the .eh_frame section:
   DW_CFA_nop
   DW_CFA_nop
 
-00000048 00000014 0000004c FDE cie=00000000 pc=f*ffffff80..f*ffffffc0
+0+0048 0+0014 0+004c FDE cie=0+0000 pc=0+8000..0+8040
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
@@ -43,30 +41,30 @@ Contents of the .eh_frame section:
   DW_CFA_nop
   DW_CFA_nop
 
-00000060 00000044 00000000 CIE
+0+0060 0+0044 0+0000 CIE
   Version:               1
   Augmentation:          "zR"
-  Code alignment factor: 2
-  Data alignment factor: -4
+  Code alignment factor: .
+  Data alignment factor: -.
   Return address column: 30
   Augmentation data:     1b
 
-  DW_CFA_def_cfa: r31 ofs 0
-  DW_CFA_def_cfa: r0 ofs 0
-  DW_CFA_offset_extended_sf: r19 at cfa\+16
-  DW_CFA_offset_extended_sf: r20 at cfa\+16
-  DW_CFA_offset_extended_sf: r21 at cfa\+16
-  DW_CFA_offset_extended_sf: r22 at cfa\+16
-  DW_CFA_offset_extended_sf: r23 at cfa\+24
-  DW_CFA_offset_extended_sf: r24 at cfa\+24
-  DW_CFA_offset_extended_sf: r25 at cfa\+24
-  DW_CFA_offset_extended_sf: r26 at cfa\+24
-  DW_CFA_offset_extended_sf: r27 at cfa\+24
-  DW_CFA_offset_extended_sf: r28 at cfa\+32
-  DW_CFA_offset_extended_sf: r29 at cfa\+32
-  DW_CFA_offset_extended_sf: r30 at cfa\+36
-  DW_CFA_offset_extended_sf: r9 at cfa\+8
-  DW_CFA_offset_extended_sf: r10 at cfa\+8
+  DW_CFA_def_cfa: r31 \(sp\) ofs 0
+  DW_CFA_def_cfa: r0 \(x0\) ofs 0
+  DW_CFA_offset_extended_sf: r19 \(x19\) at cfa\+16
+  DW_CFA_offset_extended_sf: r20 \(x20\) at cfa\+16
+  DW_CFA_offset_extended_sf: r21 \(x21\) at cfa\+16
+  DW_CFA_offset_extended_sf: r22 \(x22\) at cfa\+16
+  DW_CFA_offset_extended_sf: r23 \(x23\) at cfa\+24
+  DW_CFA_offset_extended_sf: r24 \(x24\) at cfa\+24
+  DW_CFA_offset_extended_sf: r25 \(x25\) at cfa\+24
+  DW_CFA_offset_extended_sf: r26 \(x26\) at cfa\+24
+  DW_CFA_offset_extended_sf: r27 \(x27\) at cfa\+24
+  DW_CFA_offset_extended_sf: r28 \(x28\) at cfa\+32
+  DW_CFA_offset_extended_sf: r29 \(x29\) at cfa\+32
+  DW_CFA_offset_extended_sf: r30 \(x30\) at cfa\+40
+  DW_CFA_offset_extended_sf: r73 \(v9\) at cfa\+8
+  DW_CFA_offset_extended_sf: r74 \(v10\) at cfa\+8
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
@@ -75,7 +73,7 @@ Contents of the .eh_frame section:
   DW_CFA_nop
   DW_CFA_nop
 
-000000a8 00000014 0000004c FDE cie=00000060 pc=f*ffffffc0..00000000
+0+00a8 0+0014 0+004c FDE cie=0+0060 pc=0+8040..0+8080
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
diff --git a/ld/testsuite/ld-aarch64/emit-relocs-309-low.d b/ld/testsuite/ld-aarch64/emit-relocs-309-low.d
index acb8cd3..93896cf 100644
--- a/ld/testsuite/ld-aarch64/emit-relocs-309-low.d
+++ b/ld/testsuite/ld-aarch64/emit-relocs-309-low.d
@@ -1,12 +1,12 @@
 #name: aarch64-emit-relocs-309-low
 #source: emit-relocs-309.s
 #as:
-#ld: -Ttext 0xFFFFC --section-start .got=0x0
+#ld: -Ttext 0x100004 --section-start .got=0x0
 #objdump: -dr
 #...
 
 Disassembly of section \.text:
 
-00000000000ffffc <_start>:
-   ffffc:	d503201f 	nop
-  100000:	58800000 	ldr	x0, 0 .*
+0000000000100004 <_start>:
+  100004:	d503201f 	nop
+  100008:	58800000 	ldr	x0, 8 .*
diff --git a/ld/testsuite/ld-aarch64/emit-relocs-309-up.d b/ld/testsuite/ld-aarch64/emit-relocs-309-up.d
index a84c343..32922ee 100644
--- a/ld/testsuite/ld-aarch64/emit-relocs-309-up.d
+++ b/ld/testsuite/ld-aarch64/emit-relocs-309-up.d
@@ -1,7 +1,7 @@
 #name: aarch64-emit-relocs-309-up
 #source: emit-relocs-309.s
 #as:
-#ld: -Ttext 0x0 --section-start .got=0x100000
+#ld: -Ttext 0x0 --section-start .got=0xffff8
 #objdump: -dr
 #...
 
diff --git a/ld/testsuite/ld-aarch64/emit-relocs-311.d b/ld/testsuite/ld-aarch64/emit-relocs-311.d
index 5f1b47f..578d6d3 100644
--- a/ld/testsuite/ld-aarch64/emit-relocs-311.d
+++ b/ld/testsuite/ld-aarch64/emit-relocs-311.d
@@ -10,5 +10,5 @@
 	+1000c: R_AARCH64_ADR_PREL_PG_HI21	tempy2
  +10010:	b0ffff91 	adrp	x17, 1000 <tempy3-0x234>
 	+10010: R_AARCH64_ADR_PREL_PG_HI21	tempy3
- +10014:	90000083 	adrp	x3, 20000 <tempy[+]0xf000>
+ +10014:	90000083 	adrp	x3, 20000 <_GLOBAL_OFFSET_TABLE_>
 	+10014: R_AARCH64_ADR_GOT_PAGE	gempy
diff --git a/ld/testsuite/ld-aarch64/emit-relocs-312.d b/ld/testsuite/ld-aarch64/emit-relocs-312.d
index 8d50d8d..c10dc1e 100644
--- a/ld/testsuite/ld-aarch64/emit-relocs-312.d
+++ b/ld/testsuite/ld-aarch64/emit-relocs-312.d
@@ -10,10 +10,10 @@
 	+1000c: R_AARCH64_LD_PREL_LO19	tempy2
  +10010:	58f89131 	ldr	x17, 1234 <tempy3>
 	+10010: R_AARCH64_LD_PREL_LO19	tempy3
- +10014:	f9400843 	ldr	x3, \[x2.*
+ +10014:	f9400c43 	ldr	x3, \[x2.*
 	+10014: R_AARCH64_LD64_GOT_LO12_NC	jempy
- +10018:	f9400444 	ldr	x4, \[x2.*
+ +10018:	f9400844 	ldr	x4, \[x2.*
 	+10018: R_AARCH64_LD64_GOT_LO12_NC	gempy
- +1001c:	f9400045 	ldr	x5, \[x2.*
+ +1001c:	f9400445 	ldr	x5, \[x2.*
 	+1001c: R_AARCH64_LD64_GOT_LO12_NC	lempy
 
diff --git a/ld/testsuite/ld-aarch64/tls-desc-ie.d b/ld/testsuite/ld-aarch64/tls-desc-ie.d
index 712e39c..037da07 100644
--- a/ld/testsuite/ld-aarch64/tls-desc-ie.d
+++ b/ld/testsuite/ld-aarch64/tls-desc-ie.d
@@ -3,18 +3,18 @@
 #objdump: -dr
 #...
  +10000:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
- +10004:	91002000 	add	x0, x0, #0x8
+ +10004:	91004000 	add	x0, x0, #0x10
  +10008:	94000016 	bl	10060 <v1\+0x10060>
  +1000c:	d503201f 	nop
  +10010:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
- +10014:	f9400000 	ldr	x0, \[x0\]
+ +10014:	f9400400 	ldr	x0, \[x0,#8\]
  +10018:	d503201f 	nop
  +1001c:	d503201f 	nop
  +10020:	d53bd041 	mrs	x1, tpidr_el0
  +10024:	8b000020 	add	x0, x1, x0
  +10028:	d53bd042 	mrs	x2, tpidr_el0
  +1002c:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
- +10030:	f9400000 	ldr	x0, \[x0\]
+ +10030:	f9400400 	ldr	x0, \[x0,#8\]
  +10034:	8b000040 	add	x0, x2, x0
  +10038:	b9400000 	ldr	w0, \[x0\]
  +1003c:	0b000020 	add	w0, w1, w0
@@ -24,13 +24,13 @@ Disassembly of section .plt:
 0000000000010040 <.plt>:
  +10040:	a9bf7bf0 	stp	x16, x30, \[sp,#-16\]!
  +10044:	90000090 	adrp	x16, 20000 <_GLOBAL_OFFSET_TABLE_>
- +10048:	f9401611 	ldr	x17, \[x16,#40\]
- +1004c:	9100a210 	add	x16, x16, #0x28
+ +10048:	f9401a11 	ldr	x17, \[x16,#48\]
+ +1004c:	9100c210 	add	x16, x16, #0x30
  +10050:	d61f0220 	br	x17
  +10054:	d503201f 	nop
  +10058:	d503201f 	nop
  +1005c:	d503201f 	nop
  +10060:	90000090 	adrp	x16, 20000 <_GLOBAL_OFFSET_TABLE_>
- +10064:	f9401a11 	ldr	x17, \[x16,#48\]
- +10068:	9100c210 	add	x16, x16, #0x30
+ +10064:	f9401e11 	ldr	x17, \[x16,#56\]
+ +10068:	9100e210 	add	x16, x16, #0x38
  +1006c:	d61f0220 	br	x17
diff --git a/ld/testsuite/ld-aarch64/tls-relax-all.d b/ld/testsuite/ld-aarch64/tls-relax-all.d
index d3db04d..b36b634 100644
--- a/ld/testsuite/ld-aarch64/tls-relax-all.d
+++ b/ld/testsuite/ld-aarch64/tls-relax-all.d
@@ -4,8 +4,8 @@
 #...
  +10000:	a9bf7bfd 	stp	x29, x30, \[sp,#-16\]!
  +10004:	910003fd 	mov	x29, sp
- +10008:	90000080 	adrp	x0, 20000 <ie_var\+0x1fff0>
- +1000c:	f9400000 	ldr	x0, \[x0\]
+ +10008:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
+ +1000c:	f9400400 	ldr	x0, \[x0,#8\]
  +10010:	d503201f 	nop
  +10014:	d503201f 	nop
  +10018:	d53bd041 	mrs	x1, tpidr_el0
@@ -19,8 +19,8 @@
  +10038:	8b000040 	add	x0, x2, x0
  +1003c:	b9400000 	ldr	w0, \[x0\]
  +10040:	0b000021 	add	w1, w1, w0
- +10044:	90000080 	adrp	x0, 20000 <ie_var\+0x1fff0>
- +10048:	f9400400 	ldr	x0, \[x0,#8\]
+ +10044:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
+ +10048:	f9400800 	ldr	x0, \[x0,#16\]
  +1004c:	d53bd041 	mrs	x1, tpidr_el0
  +10050:	8b000020 	add	x0, x1, x0
  +10054:	b9400000 	ldr	w0, \[x0\]
diff --git a/ld/testsuite/ld-aarch64/tls-relax-gd-ie.d b/ld/testsuite/ld-aarch64/tls-relax-gd-ie.d
index a142f54..d3783ac 100644
--- a/ld/testsuite/ld-aarch64/tls-relax-gd-ie.d
+++ b/ld/testsuite/ld-aarch64/tls-relax-gd-ie.d
@@ -2,8 +2,8 @@
 #ld: -T relocs.ld -e0
 #objdump: -dr
 #...
- +10000:	90000080 	adrp	x0, 20000 <var\+0x20000>
- +10004:	f9400000 	ldr	x0, \[x0\]
+ +10000:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
+ +10004:	f9400400 	ldr	x0, \[x0,#8\]
  +10008:	d53bd041 	mrs	x1, tpidr_el0
  +1000c:	8b000020 	add	x0, x1, x0
  +10010:	b9400000 	ldr	w0, \[x0\]
diff --git a/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie-2.d b/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie-2.d
index f3307ae..92002de 100644
--- a/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie-2.d
+++ b/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie-2.d
@@ -2,9 +2,9 @@
 #ld: -T relocs.ld -e0
 #objdump: -dr
 #...
- +10000:	90000080 	adrp	x0, 20000 <var\+0x20000>
+ +10000:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
  +10004:	d503201f 	nop
- +10008:	f9400000 	ldr	x0, \[x0\]
+ +10008:	f9400400 	ldr	x0, \[x0,#8\]
  +1000c:	d503201f 	nop
  +10010:	d503201f 	nop
  +10014:	d503201f 	nop
diff --git a/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie.d b/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie.d
index 691df06..634a55a 100644
--- a/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie.d
+++ b/ld/testsuite/ld-aarch64/tls-relax-gdesc-ie.d
@@ -2,8 +2,8 @@
 #ld: -T relocs.ld -e0
 #objdump: -dr
 #...
- +10000:	90000080 	adrp	x0, 20000 <var\+0x20000>
- +10004:	f9400000 	ldr	x0, \[x0\]
+ +10000:	90000080 	adrp	x0, 20000 <_GLOBAL_OFFSET_TABLE_>
+ +10004:	f9400400 	ldr	x0, \[x0,#8\]
  +10008:	d503201f 	nop
  +1000c:	d503201f 	nop
  +10010:	d53bd041 	mrs	x1, tpidr_el0
diff --git a/ld/testsuite/ld-elf/eh5.d b/ld/testsuite/ld-elf/eh5.d
index f862382..1a5148c 100644
--- a/ld/testsuite/ld-elf/eh5.d
+++ b/ld/testsuite/ld-elf/eh5.d
@@ -4,11 +4,11 @@
 #ld:
 #readelf: -wf
 #target: cfi
-#notarget: alpha* hppa64* tile*
+#notarget: alpha* hppa64* tile* visium*
 
 Contents of the .eh_frame section:
 
-00000000 0000001[04] 00000000 CIE
+0+0000 0+001[04] 0+0000 CIE
   Version:               1
   Augmentation:          "zR"
   Code alignment factor: .*
@@ -20,14 +20,14 @@ Contents of the .eh_frame section:
   DW_CFA_nop
   DW_CFA_nop
 #...
-0000001[48] 00000014 0000001[8c] FDE cie=00000000 pc=.*
+0+001[48] 0+0014 0+001[8c] FDE cie=0+0000 pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-000000(2c|30) 00000014 00000000 CIE
+0+00(2c|30) 0+0014 0+0000 CIE
   Version:               1
   Augmentation:          "zPR"
   Code alignment factor: .*
@@ -37,21 +37,21 @@ Contents of the .eh_frame section:
 
   DW_CFA_nop
 
-0000004[48] 00000014 0000001c FDE cie=000000(2c|30) pc=.*
+0+004[48] 0+0014 0+001c FDE cie=0+00(2c|30) pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-000000(5c|60) 00000014 0000006[04] FDE cie=00000000 pc=.*
+0+00(5c|60) 0+0014 0+006[04] FDE cie=0+0000 pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-0000007[48] 0000001[8c] 00000000 CIE
+0+007[48] 0+001[8c] 0+0000 CIE
   Version:               1
   Augmentation:          "zPLR"
   Code alignment factor: .*
@@ -63,16 +63,16 @@ Contents of the .eh_frame section:
   DW_CFA_nop
   DW_CFA_nop
 #...
-0000009[08] 0000001c 0000002[04] FDE cie=0000007[48] pc=.*
+0+009[08] 0+001c 0+002[04] FDE cie=0+007[48] pc=.*
   Augmentation data:     (ef be ad de 00 00 00 00|00 00 00 00 de ad be ef)
 
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-000000b[08] 0000001[04] 00000000 CIE
+0+00b[08] 0+001[04] 0+0000 CIE
   Version:               1
   Augmentation:          "zR"
   Code alignment factor: .*
@@ -80,14 +80,14 @@ Contents of the .eh_frame section:
   Return address column: .*
   Augmentation data:     (0b|1b)
 
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
 #...
-000000(c4|d0) 0000001[04] 0000001[8c] FDE cie=000000b[08] pc=.*
+0+00(c4|d0) 0+001[04] 0+001[8c] FDE cie=0+00b[08] pc=.*
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 #...
-000000[de]8 00000014 00000000 CIE
+0+00[de]8 0+0014 0+0000 CIE
   Version:               1
   Augmentation:          "zPR"
   Code alignment factor: .*
@@ -97,19 +97,19 @@ Contents of the .eh_frame section:
 
   DW_CFA_nop
 
-00000(0f|10)0 00000014 0000001c FDE cie=000000[de]8 pc=.*
+0+0(0f|10)0 0+0014 0+001c FDE cie=0+00[de]8 pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-000001[01]8 0000001[04] 000000(5c|64) FDE cie=000000b[08] pc=.*
+0+01[01]8 0+001[04] 0+00(5c|64) FDE cie=0+00b[08] pc=.*
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 #...
-000001(1c|30) 0000001[8c] 00000000 CIE
+0+01(1c|30) 0+001[8c] 0+0000 CIE
   Version:               1
   Augmentation:          "zPLR"
   Code alignment factor: .*
@@ -121,41 +121,41 @@ Contents of the .eh_frame section:
   DW_CFA_nop
   DW_CFA_nop
 #...
-000001(38|50) 0000001c 0000002[04] FDE cie=000001(1c|30) pc=.*
+0+01(38|50) 0+001c 0+002[04] FDE cie=0+01(1c|30) pc=.*
   Augmentation data:     (ef be ad de 00 00 00 00|00 00 00 00 de ad be ef)
 
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-000001(58|70) 00000014 000001(5c|74) FDE cie=00000000 pc=.*
+0+01(58|70) 0+0014 0+01(5c|74) FDE cie=0+0000 pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 #...
-000001(70|88) 00000014 00000(01c|148|15c) FDE cie=00000(02c|030|170) pc=.*
+0+01(70|88) 0+0014 0+0(01c|148|15c) FDE cie=0+0(02c|030|170) pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 
-000001(88|a0) 00000014 000001(8c|a4) FDE cie=00000000 pc=.*
+0+01(88|a0) 0+0014 0+01(8c|a4) FDE cie=0+0000 pc=.*
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
 #...
-000001(a0|b8|d4) 0000001c 00000(020|130|144) FDE cie=00000(074|078|1b8) pc=.*
+0+01(a0|b8|d4) 0+001c 0+0(020|130|144) FDE cie=0+0(074|078|1b8) pc=.*
   Augmentation data:     (ef be ad de 00 00 00 00|00 00 00 00 de ad be ef)
 
   DW_CFA_advance_loc: 4 to .*
-  DW_CFA_def_cfa: r0( \([er]ax\)|) ofs 16
+  DW_CFA_def_cfa: r0(.*) ofs 16
   DW_CFA_nop
   DW_CFA_nop
   DW_CFA_nop
diff --git a/ld/testsuite/ld-shared/shared.exp b/ld/testsuite/ld-shared/shared.exp
index 07fc881..7f418dc 100644
--- a/ld/testsuite/ld-shared/shared.exp
+++ b/ld/testsuite/ld-shared/shared.exp
@@ -1,7 +1,5 @@
 # Expect script for ld-shared tests
-#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
-#   2004, 2005, 2007, 2008, 2009, 2010, 2012
-#   Free Software Foundation, Inc.
+#   Copyright (C) 1994-2015 Free Software Foundation, Inc.
 #
 # This file is part of the GNU Binutils.
 #
@@ -111,8 +109,8 @@ if [istarget arm*-*-linux*] {
     # the linker doesn't support when compiling -shared without -fpic.  The
     # test to find out whether we want to XFAIL the non-PIC tests requires
     # a compile - so we pre-calculate it here.  We also note that this can
-    # only affect arm*-*-*eabi targets as the old ABI doesn't support v7.
-    if [istarget arm*-*-*eabi] {
+    # only affect arm*-*-*eabi* targets as the old ABI doesn't support v7.
+    if [istarget arm*-*-*eabi*] {
 	set file [open $tmpdir/movw-detect.c w]
 	puts $file "void foo(void) { __asm (\"movw r0, #0\"); }"
 	close $file
@@ -246,6 +244,7 @@ if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/main.c $tmpdir/mainnp.o]
 	if [ string match $shared_needs_pic "yes" ] {
 	    setup_xfail "arm*-*-linux*"
 	}
+	setup_xfail "aarch64*-*-linux*"
 	shared_test shnp "shared (non PIC)" mainnp.o sh1np.o sh2np.o shared
 
 	# Test ELF shared library relocations with a non-zero load
@@ -272,6 +271,7 @@ if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/main.c $tmpdir/mainnp.o]
 	if [ string match $shared_needs_pic "yes" ] {
 	    setup_xfail "arm*-*-linux*"
 	}
+	setup_xfail "aarch64*-*-linux*"
 	shared_test shnp "shared (non PIC, load offset)" \
 		mainnp.o sh1np.o sh2np.o shared \
 		"-T $srcdir/$subdir/elf-offset.ld"
@@ -328,6 +328,7 @@ if ![ld_compile "$CC $CFLAGS $SHCFLAG $picflag" $srcdir/$subdir/main.c $tmpdir/m
 	    if [ string match $shared_needs_pic "yes" ] {
 		setup_xfail "arm*-*-linux*"
 	    }
+	    setup_xfail "aarch64*-*-linux*"
 	    shared_test shmpnp "shared (PIC main, non PIC so)" mainp.o sh1np.o sh2np.o shared
 	}
     } else {
